# Nginx proxy-1 configuration (Special routing layer)
# Generated by Cerberus Rust edition
# Project: {{project_name}}

client_max_body_size 10G;

# Map-based routing for efficient domain handling
map $http_host $proxy_destination {
{{#if anubis_enabled}}
    default {{default_upstream}};
{{else}}
    default http://proxy-2:80;
{{/if}}
{{#each services}}
{{#unless (eq name "misskey")}}
    {{domain}} http://proxy-2:80;
{{/unless}}
{{/each}}
}

# Main proxy server (map-based routing)
server {
    listen {{external_port}} default_server;
    server_name _;
    resolver 127.0.0.11 valid=30s;

    location / {
        proxy_pass $proxy_destination;
        include /etc/nginx/conf.d/proxy_params.conf;
    }
}

# Special handling for {{special_service_name}} service
{{#if special_service}}
server {
    listen {{external_port}};
    server_name {{special_service.domain}};
    resolver 127.0.0.11 valid=30s;

    # API/streaming routes go to proxy-2 (actual service)
    location ~ ^/(streaming|inbox|outbox|api|\.well-known|url) {
        proxy_pass http://proxy-2:80;
        include /etc/nginx/conf.d/proxy_params.conf;
        
        # WebSocket support for streaming
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Main content goes to configured upstream
{{#if anubis_enabled}}
    location / {
        proxy_pass http://{{default_upstream}};
        include /etc/nginx/conf.d/proxy_params.conf;
    }
{{else}}
    location / {
        proxy_pass http://proxy-2:80;
        include /etc/nginx/conf.d/proxy_params.conf;
    }
{{/if}}
}
{{/if}}