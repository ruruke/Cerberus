# Nginx service configuration for {{service.name}}
# Generated by Cerberus Rust edition
# Project: {{project_name}}

{{#if service.websocket}}
# WebSocket upgrade support
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
{{/if}}

{{#unless (eq service.name "storage")}}
# Standard service configuration
server {
    listen {{external_port}};
    server_name {{service.domain}};
    
    {{#if service.max_body_size}}
    client_max_body_size {{service.max_body_size}};
    {{else}}
    client_max_body_size 10G;
    {{/if}}

    include /etc/nginx/conf.d/proxy_params.conf;
    
    {{#if service.websocket}}
    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    {{/if}}

    access_log /var/log/nginx/{{service.name}}_access.log;

    location / {
        {{#if (starts_with service.upstream "http")}}
        proxy_pass {{service.upstream}};
        {{else}}
        proxy_pass http://{{service.upstream}};
        {{/if}}
    }
}
{{else}}
# Special storage service configuration (S3 proxy)
server {
    listen {{external_port}};
    server_name {{service.domain}};

    client_max_body_size {{#if service.max_body_size}}{{service.max_body_size}}{{else}}1000m{{/if}};
    sendfile on;
    keepalive_timeout 70;
    server_tokens off;

    # Gzip settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    access_log /var/log/nginx/{{service.name}}_access.log;

    location / {
        proxy_set_header Host s3.us-east-2.wasabisys.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Proxy "";
        proxy_pass_header Server;
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public";

        proxy_pass {{service.upstream}};
    }
}
{{/unless}}