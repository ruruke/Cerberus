# Nginx configuration for {{proxy.name}}
# Generated by Cerberus Rust edition
# Project: {{project_name}}

worker_processes {{worker_processes}};
error_log /var/log/nginx/{{proxy.name}}_error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections {{worker_connections}};
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/{{proxy.name}}_access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout {{keepalive_timeout}};
    types_hash_max_size 2048;
    client_max_body_size {{client_max_body_size}};

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Hide server tokens
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;

{{#if has_services}}
    # Upstream definitions
{{#each services}}
    upstream {{name}}_backend {
        server {{upstream}} max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

{{/each}}
{{/if}}

    # Default upstream
    upstream default_backend {
        server {{upstream}} max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    server {
        listen {{external_port}} default_server;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # Metrics endpoint (deny external access)
        location /metrics {
            return 404;
        }

{{#if has_services}}
        # Service-specific locations
{{#each services}}
        # {{name}} service
        location / {
            set $backend_name {{name}}_backend;
            
            # Check if this request is for {{domain}}
            if ($host = "{{domain}}") {
                proxy_pass http://{{name}}_backend;
            }
            
            # Proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $upstream_http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Rate limiting
            limit_req zone=general burst=20 nodelay;
            
            # Cache settings for static content
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

{{/each}}
{{/if}}

        # Default fallback location
        location / {
            proxy_pass http://default_backend;
            
            # Proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $upstream_http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Rate limiting
            limit_req zone=general burst=20 nodelay;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 'Not Found';
            add_header Content-Type text/plain;
        }
        
        location = /50x.html {
            internal;
            return 500 'Server Error';
            add_header Content-Type text/plain;
        }
    }
}