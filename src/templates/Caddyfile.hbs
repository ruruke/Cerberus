# Caddy configuration for {{proxy.name}}
# Generated by Cerberus Rust edition
# Project: {{project_name}}

{
	# Global options
	auto_https off
	admin off
	
	# Global metrics configuration (new way)
	metrics
	
	log {
		output file /var/log/caddy/{{proxy.name}}.log
		format json
	}
}

# Main server block
:{{external_port}} {
	# Enable access logging
	log {
		output file /var/log/caddy/{{proxy.name}}_access.log
		format json
	}

	# Health check endpoint
	respond /health 200 {
		body "OK"
		close
	}

	# Metrics endpoint for Prometheus scraping (with basic auth)
	handle /metrics {
		basic_auth {
			admin $2a$14$hNf8.tD2zI.sV8X6eLzGD.wDjN8LgZ9K0P7mOeG4Jy.Xv1xD5nCqe
		}
		metrics
	}
	
	# Tracing for observability
	tracing {
		span {{proxy.name}}-proxy
	}
	
	# Security matchers
	@blocked_ips remote_ip 192.168.1.100/32 10.0.0.0/8
	@trusted_ips remote_ip private_ranges
	@suspicious_agents {
		header User-Agent "*bot*"
		header User-Agent "*crawler*"
		header User-Agent "*scraper*"
	}
	
	# Block suspicious requests
	handle @suspicious_agents {
		respond "Access Denied" 403
	}
	
	# Admin path protection (example)
	handle /admin* {
		@admin_access remote_ip private_ranges
		handle @admin_access {
			basic_auth {
				admin $2a$14$hNf8.tD2zI.sV8X6eLzGD.wDjN8LgZ9K0P7mOeG4Jy.Xv1xD5nCqe
			}
			reverse_proxy localhost:8080
		}
		respond "Admin access restricted" 403
	}

{{#if has_services}}
	# Service routing
{{#each services}}
	# Route for {{name}}
	@{{name}} host {{domain}}
	handle @{{name}} {
		reverse_proxy {{upstream}} {
			header_up Host {upstream_hostport}
			header_up X-Real-IP {remote}
			# Caddy automatically handles X-Forwarded headers
			
			# Disable health check (many services don't have /health endpoint)
			# health_uri /health
			# health_interval 30s
			# health_timeout 10s
			
			# Load balancing
			lb_policy round_robin
			
			# Retry configuration
			lb_try_duration 30s
			lb_try_interval 250ms
		}
	}

{{/each}}
{{/if}}

	# Default upstream (fallback)
	reverse_proxy {{upstream}} {
		header_up Host {upstream_hostport}
		header_up X-Real-IP {remote}
		# Caddy automatically handles X-Forwarded headers
		
		# Disable health check for Anubis (it requires X-Real-IP header)
		# health_uri /health
		# health_interval 30s
		# health_timeout 10s
		
		# Load balancing
		lb_policy round_robin
		
		# Retry configuration
		lb_try_duration 30s
		lb_try_interval 250ms
	}

	# Static file caching and serving
	@static path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
	handle @static {
		header Cache-Control "public, max-age=31536000"
		header Vary "Accept-Encoding"
	}
	
	# Security headers
	header {
		# HSTS
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		
		# Prevent clickjacking
		X-Frame-Options "SAMEORIGIN"
		
		# XSS protection
		X-XSS-Protection "1; mode=block"
		
		# Content type sniffing protection
		X-Content-Type-Options "nosniff"
		
		# Referrer policy
		Referrer-Policy "strict-origin-when-cross-origin"
		
		# Content Security Policy (basic)
		Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
		
		# Remove server header
		-Server
		
		# Performance headers
		X-Frame-Options "SAMEORIGIN"
		Timing-Allow-Origin "*"
	}

	# Rate limiting would require third-party plugins

	# Compression
	encode gzip zstd

	# Error handling
	handle_errors {
		@4xx expression `{err.status_code} >= 400 && {err.status_code} < 500`
		@5xx expression `{err.status_code} >= 500`
		
		handle @4xx {
			respond "Client Error: {err.status_code}" {err.status_code}
		}
		
		handle @5xx {
			respond "Server Error: {err.status_code}" {err.status_code}
		}
	}
}