# Dockerfile for {{proxy.name}} (HAProxy)
# Generated by Cerberus Rust edition
# Project: {{project_name}}

FROM {{base_image}}

# Install additional tools
RUN apk add --no-cache \
    curl \
    wget \
    ca-certificates \
    tzdata \
    rsyslog \
    socat

# Create directories
RUN mkdir -p {{log_path}} \
    && mkdir -p /var/lib/haproxy \
    && mkdir -p /run/haproxy \
    && mkdir -p /usr/local/etc/haproxy

# Copy configuration
COPY {{config_file}} {{config_path}}

# Create haproxy user if not exists
RUN addgroup -g 99 -S haproxy || true \
    && adduser -S -D -H -u 99 -h /var/lib/haproxy -s /sbin/nologin -G haproxy -g haproxy haproxy || true

# Set permissions
RUN chown -R haproxy:haproxy {{log_path}} \
    && chown -R haproxy:haproxy /var/lib/haproxy \
    && chown -R haproxy:haproxy /run/haproxy \
    && chmod 644 {{config_path}} \
    && chmod 755 /var/lib/haproxy

# Test configuration
RUN haproxy -f {{config_path}} -c

# Expose ports
EXPOSE {{port}}
EXPOSE 8404
EXPOSE 8405

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
    CMD curl -f http://localhost:8405/health || exit 1

# Labels
LABEL maintainer="Cerberus"
LABEL cerberus.component="proxy"
LABEL cerberus.proxy="{{proxy.name}}"
LABEL cerberus.proxy_type="haproxy"
LABEL cerberus.project="{{project_name}}"

# Set up signal handling
STOPSIGNAL SIGUSR1

# Switch to haproxy user
USER haproxy

# Default command
CMD ["haproxy", "-W", "-db", "-f", "{{config_path}}"]