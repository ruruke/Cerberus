# Dockerfile for {{proxy.name}} (Nginx)
# Generated by Cerberus Rust edition
# Project: {{project_name}}

FROM {{base_image}}

# Install additional tools
RUN apk add --no-cache \
    curl \
    wget \
    ca-certificates \
    tzdata \
    logrotate

# Create directories
RUN mkdir -p {{log_path}} \
    && mkdir -p /etc/nginx/conf.d \
    && mkdir -p /var/cache/nginx \
    && mkdir -p /var/run/nginx

# Copy configuration
COPY {{config_file}} {{config_path}}

# Create nginx user if not exists
RUN addgroup -g 101 -S nginx || true \
    && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# Set permissions
RUN chown -R nginx:nginx {{log_path}} \
    && chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /var/run/nginx \
    && chmod 644 {{config_path}} \
    && chmod 755 /var/cache/nginx

# Test configuration
RUN nginx -t

# Expose port
EXPOSE {{port}}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
    CMD curl -f http://localhost:{{port}}/health || exit 1

# Labels
LABEL maintainer="Cerberus"
LABEL cerberus.component="proxy"
LABEL cerberus.proxy="{{proxy.name}}"
LABEL cerberus.proxy_type="nginx"
LABEL cerberus.project="{{project_name}}"

# Create PID file directory
RUN mkdir -p /var/run/nginx && chown nginx:nginx /var/run/nginx

# Switch to foreground mode
STOPSIGNAL SIGQUIT

# Default command
CMD ["nginx", "-g", "daemon off;"]